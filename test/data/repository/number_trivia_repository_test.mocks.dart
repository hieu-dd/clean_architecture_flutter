// Mocks generated by Mockito 5.3.2 from annotations
// in clean_architecture_flutter/test/data/repository/number_trivia_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:clean_architecture_flutter/common/network/NetworkInfo.dart'
    as _i4;
import 'package:clean_architecture_flutter/features/number_trivia/data/datasource/number_trivia_local_data_source.dart'
    as _i3;
import 'package:clean_architecture_flutter/features/number_trivia/data/datasource/number_trivia_remote_data_source.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NumberTriviaRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNumberTriviaRemoteDataSource extends _i1.Mock
    implements _i2.NumberTriviaRemoteDataSource {
  MockNumberTriviaRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [NumberTriviaLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNumberTriviaLocalDatasource extends _i1.Mock
    implements _i3.NumberTriviaLocalDatasource {
  MockNumberTriviaLocalDatasource() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i4.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> isConnect() => (super.noSuchMethod(
        Invocation.method(
          #isConnect,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
